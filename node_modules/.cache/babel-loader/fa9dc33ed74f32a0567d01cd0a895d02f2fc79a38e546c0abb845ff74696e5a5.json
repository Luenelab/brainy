{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhaus/Coding/chakra-todo/src/ColorOverview.js\";\nimport React from 'react';\nimport { Box, Text, Button } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorOverview = ({\n  themeColors\n}) => {\n  const brandColors = themeColors.brand; // Extract brand colors from theme\n\n  // Function to copy color code to clipboard\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"lg\",\n        fontWeight: \"bold\",\n        mb: 2,\n        color: \"brand.800\",\n        children: \"Brand Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), Object.keys(brandColors).map(colorKey => /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          w: \"30px\",\n          h: \"30px\",\n          mr: 2,\n          bg: brandColors[colorKey],\n          borderRadius: \"md\",\n          border: \"1px solid #ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"brand.800\",\n          mr: 2,\n          children: colorKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"brand.800\",\n          children: brandColors[colorKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          ml: 2,\n          size: \"sm\",\n          colorScheme: \"brand\",\n          onClick: () => copyToClipboard(brandColors[colorKey]),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, colorKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ColorOverview;\nexport default ColorOverview;\nvar _c;\n$RefreshReg$(_c, \"ColorOverview\");","map":{"version":3,"names":["React","Box","Text","Button","jsxDEV","_jsxDEV","ColorOverview","themeColors","brandColors","brand","copyToClipboard","text","navigator","clipboard","writeText","children","mb","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","colorKey","display","alignItems","w","h","mr","bg","borderRadius","border","ml","size","colorScheme","onClick","_c","$RefreshReg$"],"sources":["/Users/raphaelhaus/Coding/chakra-todo/src/ColorOverview.js"],"sourcesContent":["import React from 'react';\nimport { Box, Text, Button } from '@chakra-ui/react';\n\nconst ColorOverview = ({ themeColors }) => {\n  const brandColors = themeColors.brand; // Extract brand colors from theme\n\n  // Function to copy color code to clipboard\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  return (\n    <Box>\n      <Box mb={4}>\n        <Text fontSize=\"lg\" fontWeight=\"bold\" mb={2} color=\"brand.800\">\n          Brand Colors\n        </Text>\n        {Object.keys(brandColors).map((colorKey) => (\n          <Box key={colorKey} display=\"flex\" alignItems=\"center\" mb={2}>\n            <Box w=\"30px\" h=\"30px\" mr={2} bg={brandColors[colorKey]} borderRadius=\"md\" border=\"1px solid #ccc\" />\n            <Text color=\"brand.800\" mr={2}>{colorKey}</Text>\n            <Text color=\"brand.800\">{brandColors[colorKey]}</Text>\n            <Button ml={2} size=\"sm\" colorScheme=\"brand\" onClick={() => copyToClipboard(brandColors[colorKey])}>\n              Copy\n            </Button>\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ColorOverview;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,IAAI,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACzC,MAAMC,WAAW,GAAGD,WAAW,CAACE,KAAK,CAAC,CAAC;;EAEvC;EACA,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChCC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,IAAI,CAAC;EACrC,CAAC;EAED,oBACEN,OAAA,CAACJ,GAAG;IAAAc,QAAA,eACFV,OAAA,CAACJ,GAAG;MAACe,EAAE,EAAE,CAAE;MAAAD,QAAA,gBACTV,OAAA,CAACH,IAAI;QAACe,QAAQ,EAAC,IAAI;QAACC,UAAU,EAAC,MAAM;QAACF,EAAE,EAAE,CAAE;QAACG,KAAK,EAAC,WAAW;QAAAJ,QAAA,EAAC;MAE/D;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACNC,MAAM,CAACC,IAAI,CAACjB,WAAW,CAAC,CAACkB,GAAG,CAAEC,QAAQ,iBACrCtB,OAAA,CAACJ,GAAG;QAAgB2B,OAAO,EAAC,MAAM;QAACC,UAAU,EAAC,QAAQ;QAACb,EAAE,EAAE,CAAE;QAAAD,QAAA,gBAC3DV,OAAA,CAACJ,GAAG;UAAC6B,CAAC,EAAC,MAAM;UAACC,CAAC,EAAC,MAAM;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAEzB,WAAW,CAACmB,QAAQ,CAAE;UAACO,YAAY,EAAC,IAAI;UAACC,MAAM,EAAC;QAAgB;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrGlB,OAAA,CAACH,IAAI;UAACiB,KAAK,EAAC,WAAW;UAACa,EAAE,EAAE,CAAE;UAAAjB,QAAA,EAAEY;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChDlB,OAAA,CAACH,IAAI;UAACiB,KAAK,EAAC,WAAW;UAAAJ,QAAA,EAAEP,WAAW,CAACmB,QAAQ;QAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtDlB,OAAA,CAACF,MAAM;UAACiC,EAAE,EAAE,CAAE;UAACC,IAAI,EAAC,IAAI;UAACC,WAAW,EAAC,OAAO;UAACC,OAAO,EAAEA,CAAA,KAAM7B,eAAe,CAACF,WAAW,CAACmB,QAAQ,CAAC,CAAE;UAAAZ,QAAA,EAAC;QAEpG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GANDI,QAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACiB,EAAA,GA3BIlC,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}