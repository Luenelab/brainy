{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhaus/Coding/chakra-todo/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { ChakraProvider, Box, Heading, VStack, Input, Button, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const handleAddTodo = () => {\n    if (newTodo.trim() !== '') {\n      setTodos([...todos, newTodo]);\n      setNewTodo('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      maxW: \"md\",\n      mx: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: 4,\n        children: \"ToDo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter a new todo\",\n          value: newTodo,\n          onChange: e => setNewTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddTodo,\n          colorScheme: \"teal\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Text, {\n          w: \"100%\",\n          p: 2,\n          borderWidth: 1,\n          borderRadius: \"md\",\n          children: todo\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pl47KDdAZ+Noo4OBMkwoMAr6VOU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChakraProvider","Box","Heading","VStack","Input","Button","Text","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodo","setNewTodo","handleAddTodo","trim","children","p","maxW","mx","mb","fileName","_jsxFileName","lineNumber","columnNumber","spacing","placeholder","value","onChange","e","target","onClick","colorScheme","map","todo","index","w","borderWidth","borderRadius","_c","$RefreshReg$"],"sources":["/Users/raphaelhaus/Coding/chakra-todo/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport { ChakraProvider, Box, Heading, VStack, Input, Button, Text } from '@chakra-ui/react';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n\n  const handleAddTodo = () => {\n    if (newTodo.trim() !== '') {\n      setTodos([...todos, newTodo]);\n      setNewTodo('');\n    }\n  };\n\n  return (\n    <ChakraProvider>\n      <Box p={4} maxW=\"md\" mx=\"auto\">\n        <Heading mb={4}>ToDo App</Heading>\n        <VStack spacing={4}>\n          <Input\n            placeholder=\"Enter a new todo\"\n            value={newTodo}\n            onChange={(e) => setNewTodo(e.target.value)}\n          />\n          <Button onClick={handleAddTodo} colorScheme=\"teal\">\n            Add Todo\n          </Button>\n          {todos.map((todo, index) => (\n            <Text key={index} w=\"100%\" p={2} borderWidth={1} borderRadius=\"md\">\n              {todo}\n            </Text>\n          ))}\n        </VStack>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7F,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMgB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzBJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,OAAO,CAAC,CAAC;MAC7BC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA,CAACR,cAAc;IAAAiB,QAAA,eACbT,OAAA,CAACP,GAAG;MAACiB,CAAC,EAAE,CAAE;MAACC,IAAI,EAAC,IAAI;MAACC,EAAE,EAAC,MAAM;MAAAH,QAAA,gBAC5BT,OAAA,CAACN,OAAO;QAACmB,EAAE,EAAE,CAAE;QAAAJ,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAClCjB,OAAA,CAACL,MAAM;QAACuB,OAAO,EAAE,CAAE;QAAAT,QAAA,gBACjBT,OAAA,CAACJ,KAAK;UACJuB,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEf,OAAQ;UACfgB,QAAQ,EAAGC,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACFjB,OAAA,CAACH,MAAM;UAAC2B,OAAO,EAAEjB,aAAc;UAACkB,WAAW,EAAC,MAAM;UAAAhB,QAAA,EAAC;QAEnD;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRd,KAAK,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB5B,OAAA,CAACF,IAAI;UAAa+B,CAAC,EAAC,MAAM;UAACnB,CAAC,EAAE,CAAE;UAACoB,WAAW,EAAE,CAAE;UAACC,YAAY,EAAC,IAAI;UAAAtB,QAAA,EAC/DkB;QAAI,GADIC,KAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAACf,EAAA,CAjCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}