{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhaus/Coding/chakra-todo/src/ColorOverview.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Text, VStack, HStack, IconButton, useClipboard, Tooltip } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorOverview = ({\n  themeColors\n}) => {\n  _s();\n  const {\n    hasCopied,\n    onCopy\n  } = useClipboard();\n  const getColorContrast = hexColor => {\n    // Convert hex color to RGB\n    let r = parseInt(hexColor.slice(1, 3), 16);\n    let g = parseInt(hexColor.slice(3, 5), 16);\n    let b = parseInt(hexColor.slice(5, 7), 16);\n\n    // Calculate contrast using relative luminance\n    let luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    return luminance > 0.5 ? 'black' : 'white';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"brand.800\",\n    color: \"brand.50\",\n    mt: 20,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      align: \"stretch\",\n      spacing: 4,\n      children: Object.entries(themeColors).map(([key, value]) => /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          bg: value,\n          w: \"50px\",\n          h: \"50px\",\n          borderRadius: \"md\",\n          border: \"1px solid\",\n          borderColor: key.startsWith('brand') ? 'brand.500' : 'transparent'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          align: \"stretch\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"md\",\n            fontWeight: \"bold\",\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            bg: value,\n            p: 2,\n            borderRadius: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              label: hasCopied ? 'Copied!' : 'Copy Hex',\n              placement: \"top\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"Copy color code\",\n                icon: \"copy\",\n                onClick: () => {\n                  onCopy(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"sm\",\n              color: getColorContrast(value),\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorOverview, \"/GA7SZK2vlGaVE84UXQ+v7L1nOM=\", false, function () {\n  return [useClipboard];\n});\n_c = ColorOverview;\nexport default ColorOverview;\nvar _c;\n$RefreshReg$(_c, \"ColorOverview\");","map":{"version":3,"names":["React","Box","Text","VStack","HStack","IconButton","useClipboard","Tooltip","jsxDEV","_jsxDEV","ColorOverview","themeColors","_s","hasCopied","onCopy","getColorContrast","hexColor","r","parseInt","slice","g","b","luminance","p","bg","color","mt","children","align","spacing","Object","entries","map","key","value","alignItems","w","h","borderRadius","border","borderColor","startsWith","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","label","placement","icon","onClick","_c","$RefreshReg$"],"sources":["/Users/raphaelhaus/Coding/chakra-todo/src/ColorOverview.js"],"sourcesContent":["import React from 'react';\nimport { Box, Text, VStack, HStack, IconButton, useClipboard, Tooltip } from '@chakra-ui/react';\n\nconst ColorOverview = ({ themeColors }) => {\n  const { hasCopied, onCopy } = useClipboard();\n\n  const getColorContrast = (hexColor) => {\n    // Convert hex color to RGB\n    let r = parseInt(hexColor.slice(1, 3), 16);\n    let g = parseInt(hexColor.slice(3, 5), 16);\n    let b = parseInt(hexColor.slice(5, 7), 16);\n\n    // Calculate contrast using relative luminance\n    let luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    return luminance > 0.5 ? 'black' : 'white';\n  };\n\n  return (\n    <Box p={6} bg=\"brand.800\" color=\"brand.50\" mt={20}>\n      <VStack align=\"stretch\" spacing={4}>\n        {Object.entries(themeColors).map(([key, value]) => (\n          <HStack key={key} spacing={4} alignItems=\"center\">\n            <Box bg={value} w=\"50px\" h=\"50px\" borderRadius=\"md\" border=\"1px solid\" borderColor={key.startsWith('brand') ? 'brand.500' : 'transparent'} />\n            <VStack align=\"stretch\" spacing={1}>\n              <Text fontSize=\"md\" fontWeight=\"bold\">{key}</Text>\n              <Box bg={value} p={2} borderRadius=\"md\">\n                <Tooltip label={hasCopied ? 'Copied!' : 'Copy Hex'} placement=\"top\">\n                  <IconButton\n                    aria-label=\"Copy color code\"\n                    icon=\"copy\"\n                    onClick={() => {\n                      onCopy(value);\n                    }}\n                  />\n                </Tooltip>\n                <Text fontSize=\"sm\" color={getColorContrast(value)}>{value}</Text>\n              </Box>\n            </VStack>\n          </HStack>\n        ))}\n      </VStack>\n    </Box>\n  );\n};\n\nexport default ColorOverview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}