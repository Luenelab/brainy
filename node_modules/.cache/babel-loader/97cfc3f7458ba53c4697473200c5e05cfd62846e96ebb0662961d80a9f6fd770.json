{"ast":null,"code":"import React from'react';import{Box,Text,Button,VStack,Heading}from'@chakra-ui/react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ColorOverview=_ref=>{let{themeColors}=_ref;const colorEntries=Object.entries(themeColors);return/*#__PURE__*/_jsx(Box,{maxW:\"500px\",mx:\"auto\",mt:8,p:4,children:/*#__PURE__*/_jsxs(Box,{bg:\"brand.800\",color:\"brand.50\",borderRadius:\"md\",p:4,boxShadow:\"md\",mb:6,children:[/*#__PURE__*/_jsx(Heading,{as:\"h2\",size:\"md\",mb:4,children:\"Theme Colors\"}),/*#__PURE__*/_jsx(VStack,{align:\"stretch\",children:colorEntries.map(_ref2=>{let[colorName,colorValue]=_ref2;return/*#__PURE__*/_jsx(Box,{p:2,bg:colorValue,color:getTextColor(colorValue),borderRadius:\"md\",mb:2,children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Box,{flex:\"1\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"md\",fontWeight:\"bold\",color:getContrastColor(colorValue),children:colorName}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.200\",children:colorValue})]}),/*#__PURE__*/_jsx(Button,{size:\"sm\",onClick:()=>copyToClipboard(colorValue),children:\"Copy\"})]})},colorName);})})]})});};// Function to determine text color based on background color brightness\nconst getTextColor=bgColor=>{const rgb=hexToRgb(bgColor);if(!rgb)return'black';// Default to black if unable to determine brightness\nconst brightness=rgb[0]*0.299+rgb[1]*0.587+rgb[2]*0.114;return brightness<128?'white':'black';// Use white text for dark backgrounds, black for light backgrounds\n};// Function to determine contrast color for title and hex code text\nconst getContrastColor=bgColor=>{const rgb=hexToRgb(bgColor);if(!rgb)return'black';// Default to black if unable to determine brightness\nconst brightness=rgb[0]*0.299+rgb[1]*0.587+rgb[2]*0.114;return brightness<128?'white':'gray.800';// Use white text for dark backgrounds, darker gray for light backgrounds\n};// Function to convert hex color to RGB array\nconst hexToRgb=hex=>{const shorthandRegex=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;hex=hex.replace(shorthandRegex,(m,r,g,b)=>r+r+g+g+b+b);const result=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);return result?[parseInt(result[1],16),parseInt(result[2],16),parseInt(result[3],16)]:null;};// Function to copy color code to clipboard\nconst copyToClipboard=text=>{navigator.clipboard.writeText(text);};export default ColorOverview;","map":{"version":3,"names":["React","Box","Text","Button","VStack","Heading","jsx","_jsx","jsxs","_jsxs","ColorOverview","_ref","themeColors","colorEntries","Object","entries","maxW","mx","mt","p","children","bg","color","borderRadius","boxShadow","mb","as","size","align","map","_ref2","colorName","colorValue","getTextColor","display","justifyContent","alignItems","flex","fontSize","fontWeight","getContrastColor","onClick","copyToClipboard","bgColor","rgb","hexToRgb","brightness","hex","shorthandRegex","replace","m","r","g","b","result","exec","parseInt","text","navigator","clipboard","writeText"],"sources":["/Users/raphaelhaus/Coding/chakra-todo/src/ColorOverview.js"],"sourcesContent":["import React from 'react';\nimport { Box, Text, Button, VStack, Heading } from '@chakra-ui/react';\n\nconst ColorOverview = ({ themeColors }) => {\n  const colorEntries = Object.entries(themeColors);\n\n  return (\n    <Box maxW=\"500px\" mx=\"auto\" mt={8} p={4}>\n      <Box bg=\"brand.800\" color=\"brand.50\" borderRadius=\"md\" p={4} boxShadow=\"md\" mb={6}>\n        <Heading as=\"h2\" size=\"md\" mb={4}>Theme Colors</Heading>\n        <VStack align=\"stretch\">\n          {colorEntries.map(([colorName, colorValue]) => (\n            <Box key={colorName} p={2} bg={colorValue} color={getTextColor(colorValue)} borderRadius=\"md\" mb={2}>\n              <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Box flex=\"1\">\n                  <Text fontSize=\"md\" fontWeight=\"bold\" color={getContrastColor(colorValue)}>{colorName}</Text>\n                  <Text fontSize=\"sm\" color=\"gray.200\">{colorValue}</Text>\n                </Box>\n                <Button size=\"sm\" onClick={() => copyToClipboard(colorValue)}>Copy</Button>\n              </Box>\n            </Box>\n          ))}\n        </VStack>\n      </Box>\n    </Box>\n  );\n};\n\n// Function to determine text color based on background color brightness\nconst getTextColor = (bgColor) => {\n  const rgb = hexToRgb(bgColor);\n  if (!rgb) return 'black'; // Default to black if unable to determine brightness\n  const brightness = rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114;\n  return brightness < 128 ? 'white' : 'black'; // Use white text for dark backgrounds, black for light backgrounds\n};\n\n// Function to determine contrast color for title and hex code text\nconst getContrastColor = (bgColor) => {\n  const rgb = hexToRgb(bgColor);\n  if (!rgb) return 'black'; // Default to black if unable to determine brightness\n  const brightness = rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114;\n  return brightness < 128 ? 'white' : 'gray.800'; // Use white text for dark backgrounds, darker gray for light backgrounds\n};\n\n// Function to convert hex color to RGB array\nconst hexToRgb = (hex) => {\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : null;\n};\n\n// Function to copy color code to clipboard\nconst copyToClipboard = (text) => {\n  navigator.clipboard.writeText(text);\n};\n\nexport default ColorOverview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}